@namespace Masa.Blazor
@using Microsoft.AspNetCore.Components.Rendering
@inject NavigationManager NavigationManager

@if (WithWrapper)
{
    <div class="m-interactive-trigger @Class"
         style="@Style">
        @RenderContent
    </div>
}
else
{
    @RenderContent
}

@code {

    private void RenderContent(RenderTreeBuilder __builder)
    {
        <a class="m-interactive__link"
           style="display: contents"
           href="@NavigationManager.GetUriWithQueryParameter(QueryName, QueryValue is not true)">
            @ChildContent
        </a>

        @if (QueryValue is true)
        {
            <DynamicComponent Type="@InteractiveComponentType"
                              Parameters="@InteractiveParameters" />
        }
    }

    [Parameter] public string? Class { get; set; }

    [Parameter] public string? Style { get; set; }

    [Parameter] [EditorRequired] public string QueryName { get; set; } = null!;

    [Parameter] public bool? QueryValue { get; set; }

    [Parameter] [EditorRequired] public Type InteractiveComponentType { get; set; } = null!;

    [Parameter] public IDictionary<string, object>? InteractiveParameters { get; set; }

    [Parameter] public RenderFragment? ChildContent { get; set; }

    [Parameter] public bool WithWrapper { get; set; }

    protected override void OnInitialized()
    {
        base.OnInitialized();

        QueryName.ThrowIfNull(nameof(MInteractiveTrigger));
        InteractiveComponentType.ThrowIfNull(nameof(MInteractiveTrigger));
    }

}
